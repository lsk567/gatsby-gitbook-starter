{"componentChunkName":"component---src-templates-docs-js","path":"/Protobufs","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"de75fefc-f527-5dbd-b475-0db93cd9a0b3","title":"Protobufs","slug":"/Protobufs"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Using Protobufs with Lingua Franca\"), mdx(\"p\", null, \"The following has been tested on MacOS. If your platforms differs and the installation procedures differ, please update the wiki with instructions for your platform.\"), mdx(\"h2\", null, \"Install Protobufs\"), mdx(\"p\", null, \"Clone the git repository from Github:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git clone https://github.com/protocolbuffers/protobuf.git\\ngit submodule update --init --recursive\\n\")), mdx(\"p\", null, \"Then build:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd protobuf\\n./autogen.sh\\n./configure\\nmake\\n\")), mdx(\"p\", null, \"If you run into this error: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"autoreconf: failed to run aclocal: No such file or directory\"), \", run this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"brew install autoconf && brew install automake\\n\")), mdx(\"p\", null, \"and start over from autogen.sh.\\nOtherwise, if \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"make\"), \" succeeded, continue:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"make check\\nsudo make install\\n\")), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"make install\"), \" command installs the binary and library files in standard places, hence the need for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo\"), \".\\nYou should now see this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"> which protoc\\n/usr/local/bin/protoc\\n> protoc --version\\nlibprotoc 3.11.0\\n\")), mdx(\"p\", null, \"(or some more recent version).\"), mdx(\"p\", null, \"It may be tempting to download binary from \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/protocolbuffers/protobuf/releases/tag/v3.11.1\"\n  }, \"https://github.com/protocolbuffers/protobuf/releases/tag/v3.11.1\"), \" for your platform, but this will not give you the packages required to compile protobuf-c.\"), mdx(\"h2\", null, \"Install protobuf-c\"), mdx(\"p\", null, \"Clone protobuf-c from Github:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git clone https://github.com/protobuf-c/protobuf-c.git\\n\")), mdx(\"p\", null, \"Then build:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd protobuf-c\\n./autogen.sh\\n./configure\\nmake\\nsudo make install\\n\")), mdx(\"p\", null, \"The last command puts files into /usr/local/include to be included in your C files, hence the need for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"sudo\"), \".\"), mdx(\"h2\", null, \"Install gRPC\"), mdx(\"p\", null, \"Instructions for several platforms are here: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/grpc/grpc/blob/v1.25.0/BUILDING.md\"\n  }, \"https://github.com/grpc/grpc/blob/v1.25.0/BUILDING.md\"), \"\\nThe following worked for me on MacOS.\"), mdx(\"p\", null, \"Clone gRPC from Github:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git clone https://github.com/grpc/grpc.git\\ncd grpc\\ngit submodule update --init --recursive\\n\")), mdx(\"p\", null, \"Then build:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"make\\n\")), mdx(\"h2\", null, \"Install protobuf-c-rpc\"), mdx(\"p\", null, \"Clone protobuf-c-rpc and build:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git clone https://github.com/protobuf-c/protobuf-c-rpc\\ncd protobuf-c-rpc\\n./autogen.sh\\n./configure\\nmake\\n\")), mdx(\"p\", null, \"FIXME: The above fails for me with this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"EALMAC:protobuf-c-rpc eal$ make\\n/Applications/Xcode.app/Contents/Developer/usr/bin/make  all-am\\nCCLD     protobuf-c-rpc/libprotobuf-c-rpc.la\\nUndefined symbols for architecture x86_64:\\n  \\\"_protobuf_c_buffer_simple_append\\\", referenced from:\\n      _server_connection_response_closure in protobuf-c-rpc-server.o\\n\")), mdx(\"h1\", null, \"Using gRPC with Lingua Franca\"), mdx(\"p\", null, \"We are probably not going to use gRPC after all. Download from here:\"), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/Juniper/grpc-c.git\"\n  }, \"https://github.com/Juniper/grpc-c.git\")), mdx(\"p\", null, \"and build using instructions.  The grpc-c git repo includes grpc, protobuf, and protobuf-c as git submodules, however, the grpc version that this uses does not compile for me. I installed grpc, protobuf, and protobuf-c separately from source.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#using-protobufs-with-lingua-franca","title":"Using Protobufs with Lingua Franca","items":[{"url":"#install-protobufs","title":"Install Protobufs"},{"url":"#install-protobuf-c","title":"Install protobuf-c"},{"url":"#install-grpc","title":"Install gRPC"},{"url":"#install-protobuf-c-rpc","title":"Install protobuf-c-rpc"}]},{"url":"#using-grpc-with-lingua-franca","title":"Using gRPC with Lingua Franca"}]},"parent":{"relativePath":"Protobufs.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Benchmarks","title":"Benchmarks"}}},{"node":{"fields":{"slug":"/A-future-proof-package-and-import-system","title":"A Future Proof Package And Import System"}}},{"node":{"fields":{"slug":"/Clone-the-Repository","title":"Clone The Repository"}}},{"node":{"fields":{"slug":"/Containerized-Execution","title":"Containerized Execution"}}},{"node":{"fields":{"slug":"/Contributing","title":"Contributing"}}},{"node":{"fields":{"slug":"/Creating-and-Managing-Submodules","title":"Creating And Managing Submodules"}}},{"node":{"fields":{"slug":"/Developer-IntelliJ-Setup-(for-Kotlin)","title":"Developer Intelli J Setup For Kotlin"}}},{"node":{"fields":{"slug":"/Diagrams","title":"Diagrams"}}},{"node":{"fields":{"slug":"/Distributed-Execution","title":"Distributed Execution"}}},{"node":{"fields":{"slug":"/Generic-Types,-Interfaces,-and-Inheritance","title":"Generic Types Interfaces And Inheritance"}}},{"node":{"fields":{"slug":"/Downloading-and-Building","title":"Downloading And Building"}}},{"node":{"fields":{"slug":"/Home","title":"Home"}}},{"node":{"fields":{"slug":"/Import-System","title":"Import System"}}},{"node":{"fields":{"slug":"/Legacy-Eclipse-Instructions","title":"Legacy Eclipse Instructions"}}},{"node":{"fields":{"slug":"/Maven-Notes","title":"Maven Notes"}}},{"node":{"fields":{"slug":"/Modal-Models-RFC","title":"Modal Models RFC"}}},{"node":{"fields":{"slug":"/Multiports-and-Banks-of-Reactors","title":"Multiports And Banks Of Reactors"}}},{"node":{"fields":{"slug":"/Overview","title":"Overview"}}},{"node":{"fields":{"slug":"/Protobufs","title":"Protobufs"}}},{"node":{"fields":{"slug":"/Publications-and-Presentations","title":"Publications And Presentations"}}},{"node":{"fields":{"slug":"/Regression-Tests","title":"Regression Tests"}}},{"node":{"fields":{"slug":"/Related-Work","title":"Related Work"}}},{"node":{"fields":{"slug":"/Results-of-Experiments-for-Rhythm","title":"Results Of Experiments For Rhythm"}}},{"node":{"fields":{"slug":"/Running-Benchmarks","title":"Running Benchmarks"}}},{"node":{"fields":{"slug":"/Running-Lingua-Franca-IDE-(Epoch)-with-Kotlin-based-Code-Generators-Enabled-(without-Eclipse-Environment)","title":"Running Lingua Franca IDE Epoch With Kotlin Based Code Generators Enabled Without Eclipse Environment"}}},{"node":{"fields":{"slug":"/Support-Matrix","title":"Support Matrix"}}},{"node":{"fields":{"slug":"/Tardiness","title":"Tardiness"}}},{"node":{"fields":{"slug":"/Target-Specification","title":"Target Specification"}}},{"node":{"fields":{"slug":"/Termination","title":"Termination"}}},{"node":{"fields":{"slug":"/Timing-Analysis","title":"Timing Analysis"}}},{"node":{"fields":{"slug":"/Tools","title":"Tools"}}},{"node":{"fields":{"slug":"/Troubleshooting","title":"Troubleshooting"}}},{"node":{"fields":{"slug":"/Using-Maven","title":"Using Maven"}}},{"node":{"fields":{"slug":"/Web-Based-Editor","title":"Web Based Editor"}}},{"node":{"fields":{"slug":"/Writing-Reactors-in-Cpp","title":"Writing Reactors In Cpp"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/Writing-Reactors-in-Python","title":"Writing Reactors In Python"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/Writing-Reactors-in-TypeScript","title":"Writing Reactors In Type Script"}}}]}},"pageContext":{"id":"de75fefc-f527-5dbd-b475-0db93cd9a0b3"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}