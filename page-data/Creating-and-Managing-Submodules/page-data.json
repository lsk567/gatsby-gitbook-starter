{"componentChunkName":"component---src-templates-docs-js","path":"/Creating-and-Managing-Submodules","result":{"data":{"site":{"siteMetadata":{"title":"Gatsby Gitbook Boilerplate | Hasura","docsLocation":"https://github.com/hasura/gatsby-gitbook-boilerplate/tree/master/content"}},"mdx":{"fields":{"id":"765171e0-e7b1-5365-8dae-9482e5c5a2ae","title":"Creating And Managing Submodules","slug":"/Creating-and-Managing-Submodules"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Lingua-Franca uses \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://git-scm.com/book/en/v2/Git-Tools-Submodules\"\n  }, \"git submodules\"), \" to incorporate third-party projects that are needed for some targets and features. For example, the TypeScript target requires the  \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/icyphy/reactor-ts\"\n  }, \"reactor-ts repository\"), \".\"), mdx(\"h2\", null, \"Using Submodules\"), mdx(\"p\", null, \"When initially cloning the Lingua Franca repository, use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--recursive\"), \" flag to get all included submodules:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git clone --recursive https://github.com/icyphy/lingua-franca.git\\n\")), mdx(\"h2\", null, \"Pulling a New or Updated Submodule\"), mdx(\"p\", null, \"If a new submodule has been added to the Lingua Franca repository or an existing module has been updated, then all users have to explicitly pull the new or updated module. Sadly, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git pull\"), \" alone does not work. A submodule is really a pointer to a \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"commit\"), \" in another repository, not a pointer to the repository. Hence, every user has to do this:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git pull\\ngit submodule update --init --recursive\\n\")), mdx(\"p\", null, \"Oddly, git reports to users that a submodule has been updated by indicating that the user him/herself has modified a file, such as \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"reactor-ts\"), \", that contains the key of the submodule commit. To clear this, the user must execute the commands above.\"), mdx(\"h2\", null, \"Adding a Submodule to Lingua Franca\"), mdx(\"p\", null, \"To add a submodule, navigate to the directory where you want the submodule to be located and run:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git submodule add <submodule_repository_URL>\\n\")), mdx(\"p\", null, \"This command will clone the desired submodule into your file system. It will also modify Lingua Franca's .gitmodules and add a new file to git tracking with the name of the submodule. Your next commit to Lingua Franca will record the new submodule.\"), mdx(\"h2\", null, \"Updating Lingua Franca with Changes to a Submodule\"), mdx(\"p\", null, \"If you make a change with the repository that is included in Lingua Franca as a submodule, and you want that change to propagate to all installations of Lingua Franca, then you need to update the pointer to the particular commit of the submodule within the Lingua Franca repository.  For example, if you have committed an update to reactor-ts repository, then within the Lingua Franca repository, you can pull this new version and commit the new version of the submodule as follows:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"cd ~/git/lingua-franca/xtext/org.icyphy.linguafranca/src/lib/TS/reactor-ts\\ngit pull origin master\\ncd ..\\ngit commit reactor-ts/\\ngit push\\n\")), mdx(\"p\", null, \"The above assumes that your Lingua Franca repository is in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/git/lingua-franca\"), \".\"), mdx(\"p\", null, \"Notably \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"git pull\"), \" without an explicit remote and branch won't work the first time you try it because the submodule is locked to a particular commit.\"), mdx(\"p\", null, \"Sadly, all users of the Lingua Franca repository need to do the following to get your updates:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"git pull\\ngit submodule update --init --recursive\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#using-submodules","title":"Using Submodules"},{"url":"#pulling-a-new-or-updated-submodule","title":"Pulling a New or Updated Submodule"},{"url":"#adding-a-submodule-to-lingua-franca","title":"Adding a Submodule to Lingua Franca"},{"url":"#updating-lingua-franca-with-changes-to-a-submodule","title":"Updating Lingua Franca with Changes to a Submodule"}]},"parent":{"relativePath":"Creating-and-Managing-Submodules.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/Benchmarks","title":"Benchmarks"}}},{"node":{"fields":{"slug":"/A-future-proof-package-and-import-system","title":"A Future Proof Package And Import System"}}},{"node":{"fields":{"slug":"/Clone-the-Repository","title":"Clone The Repository"}}},{"node":{"fields":{"slug":"/Containerized-Execution","title":"Containerized Execution"}}},{"node":{"fields":{"slug":"/Contributing","title":"Contributing"}}},{"node":{"fields":{"slug":"/Creating-and-Managing-Submodules","title":"Creating And Managing Submodules"}}},{"node":{"fields":{"slug":"/Developer-IntelliJ-Setup-(for-Kotlin)","title":"Developer Intelli J Setup For Kotlin"}}},{"node":{"fields":{"slug":"/Diagrams","title":"Diagrams"}}},{"node":{"fields":{"slug":"/Distributed-Execution","title":"Distributed Execution"}}},{"node":{"fields":{"slug":"/Generic-Types,-Interfaces,-and-Inheritance","title":"Generic Types Interfaces And Inheritance"}}},{"node":{"fields":{"slug":"/Downloading-and-Building","title":"Downloading And Building"}}},{"node":{"fields":{"slug":"/Home","title":"Home"}}},{"node":{"fields":{"slug":"/Import-System","title":"Import System"}}},{"node":{"fields":{"slug":"/Legacy-Eclipse-Instructions","title":"Legacy Eclipse Instructions"}}},{"node":{"fields":{"slug":"/Maven-Notes","title":"Maven Notes"}}},{"node":{"fields":{"slug":"/Modal-Models-RFC","title":"Modal Models RFC"}}},{"node":{"fields":{"slug":"/Multiports-and-Banks-of-Reactors","title":"Multiports And Banks Of Reactors"}}},{"node":{"fields":{"slug":"/Overview","title":"Overview"}}},{"node":{"fields":{"slug":"/Protobufs","title":"Protobufs"}}},{"node":{"fields":{"slug":"/Publications-and-Presentations","title":"Publications And Presentations"}}},{"node":{"fields":{"slug":"/Regression-Tests","title":"Regression Tests"}}},{"node":{"fields":{"slug":"/Related-Work","title":"Related Work"}}},{"node":{"fields":{"slug":"/Results-of-Experiments-for-Rhythm","title":"Results Of Experiments For Rhythm"}}},{"node":{"fields":{"slug":"/Running-Benchmarks","title":"Running Benchmarks"}}},{"node":{"fields":{"slug":"/Running-Lingua-Franca-IDE-(Epoch)-with-Kotlin-based-Code-Generators-Enabled-(without-Eclipse-Environment)","title":"Running Lingua Franca IDE Epoch With Kotlin Based Code Generators Enabled Without Eclipse Environment"}}},{"node":{"fields":{"slug":"/Support-Matrix","title":"Support Matrix"}}},{"node":{"fields":{"slug":"/Tardiness","title":"Tardiness"}}},{"node":{"fields":{"slug":"/Target-Specification","title":"Target Specification"}}},{"node":{"fields":{"slug":"/Termination","title":"Termination"}}},{"node":{"fields":{"slug":"/Timing-Analysis","title":"Timing Analysis"}}},{"node":{"fields":{"slug":"/Tools","title":"Tools"}}},{"node":{"fields":{"slug":"/Troubleshooting","title":"Troubleshooting"}}},{"node":{"fields":{"slug":"/Using-Maven","title":"Using Maven"}}},{"node":{"fields":{"slug":"/Web-Based-Editor","title":"Web Based Editor"}}},{"node":{"fields":{"slug":"/Writing-Reactors-in-Cpp","title":"Writing Reactors In Cpp"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/Writing-Reactors-in-Python","title":"Writing Reactors In Python"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/Writing-Reactors-in-TypeScript","title":"Writing Reactors In Type Script"}}}]}},"pageContext":{"id":"765171e0-e7b1-5365-8dae-9482e5c5a2ae"}},"staticQueryHashes":["2619113677","3706406642","417421954"]}